 * The PyCmd source code has been ported to Python3 (thanks github.com/UFO for
   the help). WARNING: this means that your custom init.py files might need
   to be adapted!
Release 20221113:
 * DelayedExpansion is now ON by default (can be overriden with /V:OFF)
 * %ERRORLEVEL% is now processed correctly
 * ERRORLEVEL is shown in the default prompt (if != 0)

Release 20200310:
 * zsh-style completions (displayed below prompt)
 
Snapshot 20171215:
 * Default prompt displays git and svn status
 * Command history increased from 1000 to 2000
 * Lexical text selection (Shift-Up/Down)
 * Search text in the current input line (F3, Shift-F3)
 * Alt-Up to go to the parent directory
 * Overwrite mode (Ins)
 
What's new in PyCmd 0.9?

 * Configuration file (init.py) for customizing colors, prompt etc.
 * Fuzzy history search
 * Tab-completion now works with both '/' and '\' as separators
 * Switch build from py2exe (no longer maintained) to cx_freeze
 * Added 64-bit build
 * Bugfixes in completion, line rendering

What's new in PyCmd 0.8?

 * Treat .cmd files as executable (just like .bat)
 * Flash titlebar after long tasks if the window is inactive
 * Faster completions
 * Warn before displaying long completion list
 * The completion works correctly for (semicolon-separated) lists of paths
   (e.g. --classpath="C:\Program Files\classes;d:\users\horea\my_jars;...)
 * Avoid duplicate backslash when completing
 * Quiet option (/Q) to suppress welcome and bye messages
 * Numbered entries in the directory history (use Alt-1..9 to switch)
 * Improved README
 * Bugfixes in completion, copy & paste


What's new in PyCmd 0.7?

 * Tab-completion now works with wildcards (*, ?)
 * Detach GUI applications from the console (Frerich Raabe)
 * Dynamic, context-sensitive token expansion with Alt-/ (Emacs-style)
 * Ctrl-C "aborts" a line if no text is selected
 * new switch (-T) to set a prefix for the window title (Frerich Raabe)


What's new in PyCmd 0.6?

 * Basic command line arguments (/c and /k -- similar to cmd.exe)
 * Display completions on multiple columns
 * Highlight common prefix when displaying completions
 * Log crash reports under %APPDATA%\PyCmd
 * More accurate handling of syntactically incorrect commands
 * Improved word-by-word navigation and editing (more separators)
 * Bugfixes in history search, directory history


What's new in PyCmd 0.5?

 * Undo/Redo with Ctrl-Z/Ctrl-Shift-Z (regular style) and Ctrl-_ (Emacs-style)
 * Save the command and directory history after each command
 * Smarter directory history (repainted if Alt-Left/Right pressed after Alt-D)
 * New line parser that supports escaping with ^ and tokens like '2>&1'
 * New shortcut (Ctrl-Backspace)
 * Bugfixes in buffer scrolling, repainting, unescaping


What's new in PyCmd 0.4?

 * Copy-paste using the keyboard (both Ctrl-C/X/V and Emacs-style bindings)
 * Persistent history of recently visited directories
 * History and configuration files moved to %APPDATA%\PyCmd
 * Custom PyCmd icon (embedded as a resource in PyCmd.exe)
 * New shortcut (Ctrl-K)
 * Delete temporary file on exit
 * Improved word-by-word editing
 * Bugfixes in command tokenizing, pseudo-variables


What's new in PyCmd 0.3?

 * TAB-completion for executables in the PATH
 * TAB-completion for internal CMD.exe commands
 * Scroll buffer using Shift-PgUp/PgDn
 * Removed flickering when repainting the input line and prompt
 * Smarter handling of colors to accommodate various color schemes
 * Completion for pseudo environment variables (%CD%, %DATE%, etc)
 * Improved automatic quoting when completing
 * Improved handling of lower/uppercase when completing
 * Bugfixes in ~ expansion, command tokenizing, TAB-completion, stability


What's new in PyCmd 0.2?

 * smart prompt that abbreviates directory names to save space
 * set window title to the current directory
 * reworked key handling; many more keyboard actions are now available
 * added emacs key bindings
 * '~' is now handled properly and expanded as either %HOME% or %USERPROFILE%
 * tab-completion improvement (smarter quoting policy)
 * command line input now works for arbitrary widths of the console window
 * Added changelog (NEWS.txt) and project description (README.txt)

 * bugfixes in the history search mechanism
